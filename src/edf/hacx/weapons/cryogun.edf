/**
 * HacX 2.0 - EDF
 *
 * Weapon: Cryogun
 */

weaponinfo HacxCryogun : HacxWeapon
{
  ammotype       AmmoShell
  ammouse        2
  upsound        "weapons/cryoup"
  selectionorder 2.0

  flags        SILENCEABLE|HAPTICRECOIL|DISABLEAPS
  mod          HacxCryogun
  hapticrecoil 5
  haptictime   5

  states
  @"
  Ready:
    CRYG A 1 A_WeaponReady()
    loop
  Deselect:
    CRYG A 0 A_Lower()
    CRYG A 1 A_Lower()
    loop
  Select:
    CRYG A 0 A_Raise()
    CRYG A 1 A_Raise()
    loop
  Fire:
    CRYG A 2
    CRYG A 0 A_GunFlash()
    CRYG A 0 A_PlaySoundEx("weapons/cryofire", weapon)
    CRYG A 4 X_FireCryogun()
    CRYG B 3
    CRYG C 3 A_CheckReload()
    CRYG D 4 A_PlaySoundEx("weapons/uzireload", weapon)
    CRYG E 5
    CRYG F 4 A_PlaySoundEx("weapons/cryohit", weapon)
    CRYG G 4
    CRYG H 0 A_PlaySoundEx("weapons/cryocool", weapon)
    CRYG H 3 A_ReFire()
    goto Ready
  Flash:
    CRYG I 2 BRIGHT A_Light1()
    CRYG J 3 BRIGHT A_Light0()
    stop
  AltFire:
    CRYK A 3 A_PlaySoundEx("weapons/grunt", weapon)
    CRYK B 3
    CRYK C 8 A_CustomPlayerMelee(4, 10, 10, punch, "weapons/kick", 96)
    CRYK B 3
    CRYK A 3
    CRYK A 0 A_ReFire()
    goto Ready
  "@
}

weapongiver HacxCryogunGiver
{
  weapon HacxCryogun
  ammogiven AmmoShell, 8, 4, 20, 8
}

thingtype HacxCryogun : Mobj, 82
{
  flags SPECIAL

  acs_spawndata
  {
    num   33
    modes doom
  }

  pickupeffect
  {
    effects HacxCryogunGiver
    message "$GOTCRYOGUN"
    sound   wpnup
  }

  states
  @"
  Spawn:
    CRYO A -1
    stop
  "@
}

action X_FireCryogun
{
  code
  @"
    void X_FireCryogun(EE::Player @player)
    {
      // TODO: gunflash
      // TODO: play sound
      player.subtractAmmo();

      for (int i = 0; i < 20; i++) {
        EE::Mobj @mo = player.spawnMissile("HacxCryoShot");

        // adjust missileheight to account for increased player height
        mo.z = player.mo.z + (player.mo.height/2) + 28.0;

        // adjust random params by stuff.
        // bit manual and janky, but it works.
        // TODO: grab base speed from mobj.info when that's a thing
        fixed_t speed = (30.0 + Math::Rand::RangeFixed(-5.0, 5.0));
        fixed_t rangle;
        fixed_t rpitch;
        if (i < 5) {
          rangle = 8.0;
          rpitch = 0.5;
        } else if (i < 10) {
          rangle = 6.5;
          rpitch = 1.0;
        } else if (i < 20) {
          rangle = 5.5;
          rpitch = 2.0;
        } else {
          rangle = 3.5;
          rpitch = 3.0;
        }

        // 420 randomize it
        mo.angle += Math::Rand::RangeFixed(0-rangle, rangle);
        mo.mom.x = (speed * Math::Cos(mo.angle));
        mo.mom.y = (speed * Math::Sin(mo.angle));
        mo.mom.z += Math::Rand::RangeFixed(0-rpitch, rpitch);
      }
    }
  "@
}

thingtype HacxCryoShot
{
  deathsound "weapons/cryohit";
  speed      30.0
  radius     8.0
  height     8.0
  damage     5
  damagemod  3
  cflags     NOBLOCKMAP|NOGRAVITY|DROPOFF|MISSILE|NOCROSS|SPACMISSILE|TLSTYLEADD
  mod        HacxCryogun

  // TODO: bouncy projectiles

  obituary_normal "$OB_MPCRYOGUN"

  acs_spawndata
  { 
    num   51 
    modes doom
  }

  states
  @"
  Spawn:
    CPRJ A 1 bright A_SpawnEx(HacxCryoTrail)
    loop
  Death:
    CPUF ABCDEFG 3 bright
    stop
  "@
}

thingtype HacxCryoTrail
{
  cflags         NOBLOCKMAP|NOGRAVITY|SYNCHRONIZED|NORANDOMIZE|TLSTYLEADD
  translucency   25%
  alphavelocity -0.05
  xscale         0.5
  yscale         0.5

  states
  @"
  Spawn:
    CPUF CDCD 3 bright
    stop
  "@
}
